{"version":3,"sources":["constants.js","theme.js","config.js","DataStore.js","components/Header.js","components/FooterItem.js","components/Footer.js","App.js","registerServiceWorker.js","index.js","components/LoadingSpinner.js","webpack:///./src/utils.js?025e"],"names":["ROUTES","dashboard","logging","edit","editLink","id","new","list","recipes","css","global","padding","margin","width","height","listStyle","fontSize","fontWeight","fontFamily","color","textDecoration","outline","borderBottomColor","green100","green500","MATERIAL","textField","underlineStyle","borderColor","underlineFocusStyle","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Store","uid","category","entriesRef","_observers","data","registerObserver","observer","push","getRecord","_entriesRef","doc","get","then","log","deleteRecord","delete","saveRecord","record","rest","$category","_category","user","_uid","set","add","sortLogs","sort","a","b","getExactTimeStamp","onSnapshot","snapshot","docChanges","forEach","change","type","unshift","changedLog","find","changedIndex","indexOf","filter","this","bind","where","orderBy","limit","DataStore","_auth","login","provider","firebase","GoogleAuthProvider","Error","auth","signInWithRedirect","signOut","length","console","config","Promise","resolve","reject","setPersistence","Auth","Persistence","SESSION","onAuthStateChanged","db","collection","loggingStore","Header","photoURL","position","top","zIndex","backgroundColor","display","justifyContent","alignItems","src","alt","left","borderRadius","border","boxShadow","onClick","right","FooterItem","children","Icon","label","path","to","isActive","match","location","isEditRoute","pathname","split","toLowerCase","replace","activeClassName","flexDirection","cursor","fill","Footer","bottom","borderTop","DashboardIcon","AssignmentIcon","SettingsIcon","LoginRoute","lazy","SettingsRoute","LoggingEditRoute","DashboardRoute","LoggingList","dataStore","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","fallback","useState","logs","setLogs","authStatus","setAuthStatus","useEffect","checkAuth","e","LoadingSpinner","overflow","exact","history","saveFn","deleteFn","params","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","small","transform","size","thickness","Date","date","time","getTime","getTimePeriodEmoji","hours","emojify","getRatingEmoji","rating","transfromDateString","splittedDate"],"mappings":"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","file":"static/js/main.20fa3f5a.chunk.js","sourcesContent":["export const ROUTES = {\n  dashboard: '/dashboard',\n  logging: {\n    edit: '/logging/edit/:id',\n    editLink: (id) => `/logging/edit/${id}`,\n    new: '/logging/new',\n    list: '/logging/list'\n  },\n  recipes: {\n    edit: '/recipes/edit/:id',\n    new: '/recipes/new',\n    list: '/recipes/list'\n  }\n}\n","import { css } from 'glamor'\nimport {\n  green100, green500\n} from 'material-ui/styles/colors';\n\n// layout reset\ncss.global('*', { padding: '0', margin: '0' })\ncss.global('html, body, #root, ul', { \n  width: '100%',\n  height: '100%',\n})\ncss.global('ul', { listStyle: 'none' })\ncss.global('html', { \n  fontSize: '18',\n  fontWeight: '300',\n  fontFamily: `-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n  Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif`\n})\ncss.global('a', { \n  color: 'inherit',\n  textDecoration: 'none'\n})\ncss.global('button:focus', { outline: 'none !important' })\ncss.global('.MuiInput-underline:after, .MuiInput-underline:before', {\n  borderBottomColor: `${green100} !important`,\n});\n\ncss.global('.MuiInput-underline:hover:not(.Mui-disabled):before', {\n  borderBottomColor: `${green500} !important`,\n});\n\n// icons\n\n// material-ui\nexport const MATERIAL = {\n  textField: {\n    underlineStyle: {\n      borderColor: green100\n    },\n    underlineFocusStyle: {\n      borderColor: green500\n    }\n  }\n}\n","const firebaseConfig = {\n  apiKey: \"AIzaSyBujR137-fNfbRwEwhT51qjsRZ2pQvn0d0\",\n  authDomain: \"sponsibly-79cb7.firebaseapp.com\",\n  databaseURL: \"https://sponsibly-79cb7.firebaseio.com\",\n  projectId: \"sponsibly-79cb7\",\n  storageBucket: \"sponsibly-79cb7.appspot.com\",\n  messagingSenderId: \"100632956671\",\n  appId: \"1:100632956671:web:291254e635f9a7343c46ca\",\n  measurementId: \"G-KSD3DREJQN\"\n};\n\nexport default firebaseConfig;","// @flow\nimport * as firebase from 'firebase'\nimport 'firebase/firestore';\nimport config from './config';\n\nimport { getExactTimeStamp } from './utils'\nimport { Log, User, LoginType } from './types'\n\ntype Records = {\n  id?: string\n}\n\ntype Observer<T> = (records: Array<T>) => void\n\nclass Store<T: Records> {\n  _observers: Array<Observer<T>> = []\n  _uid: string\n  _entriesRef: any\n  _category: string\n  data: Array<T> = []\n\n  constructor(uid: string, category: string, entriesRef: any) {\n    this._uid = uid\n    this._entriesRef = entriesRef\n    this._category = category\n    this.saveRecord = this.saveRecord.bind(this)\n    this.deleteRecord = this.deleteRecord.bind(this)\n    this.getRecord = this.getRecord.bind(this)\n\n    this._entriesRef\n      .where('$category', '==', category)\n      .where('user', '==', uid)\n      .orderBy('date', 'desc')\n      .limit(40)\n      .onSnapshot(this.onSnapshot);\n  }\n\n  registerObserver = (observer: Observer<T>): void => {\n    this._observers.push(observer)\n  }\n\n  getRecord = (id: string): Promise<any> => {\n    return this._entriesRef.doc(id).get().then(log => log.data())\n  }\n\n  deleteRecord = (id: string): Promise<any> => {\n    return this._entriesRef.doc(id).delete()\n  }\n\n  saveRecord = (record: Log): Promise<any> => {\n    const { id, ...rest } = record\n    const data = {\n      ...rest,\n      $category: this._category,\n      user: this._uid\n    }\n    return id ? this._entriesRef.doc(id).set(data)\n              : this._entriesRef.add(data)\n  }\n\n  sortLogs = (): void => {\n    this.data.sort((a, b) => {\n      return getExactTimeStamp(b) - getExactTimeStamp(a)\n    })\n  }\n\n  onSnapshot = (snapshot: any) => {\n    snapshot.docChanges().forEach((change: any) => {\n      if (change.type === 'added') {\n        this.data.unshift({\n          ...change.doc.data(),\n          id: change.doc.id\n        })\n      } else if (change.type === 'modified') {\n        const changedLog = this.data.find((log) => log.id === change.doc.id)\n        const changedIndex = this.data.indexOf(changedLog)\n        this.data[changedIndex] = {\n          ...change.doc.data(),\n          id: change.doc.id\n        }\n      } else if (change.type === 'removed') {\n        this.data = this.data.filter((log) => {\n          return log.id !== change.doc.id\n        })\n      }\n    })\n    this.sortLogs()\n    this._observers.forEach((observer: Observer<T>) => observer(this.data))\n  }\n}\n\nexport default class DataStore {\n  _auth = null\n  _entriesRef = null\n  loggingStore: Store<Log>\n  user: User\n\n  constructor() {\n    if (!firebase.apps.length) {\n      console.log(config);\n      firebase.initializeApp(config);\n    }\n  }\n\n  get auth(): any {\n    return this._auth ? this._auth : firebase.auth()\n  }\n\n  checkAuth(): Promise<User> {\n    return new Promise((resolve, reject) => {\n      this.auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\n      this.auth.onAuthStateChanged(user => {\n        if (user) {\n          const db = firebase.firestore();\n\n          this._entriesRef = db.collection('entries')\n\n          this.user = user\n          const { uid } = user\n\n          this.loggingStore = new Store(uid, 'logs', this._entriesRef)\n\n          resolve(this)\n        } else {\n          reject()\n        }\n      })\n    })\n  }\n\n  login = (type: LoginType): void => {\n    let provider\n    \n    switch(type) {\n      case 'google':\n        provider = new firebase.auth.GoogleAuthProvider()\n        break\n      default:\n        throw Error(`Unexpected login type: ${type}`)\n    }\n    this.auth.signInWithRedirect(provider);\n  }\n\n  signOut = () => firebase.auth().signOut()\n}","// @flow\nimport React from 'react'\nimport { css } from 'glamor'\nimport ExitIcon from 'material-ui/svg-icons/action/exit-to-app'\n\ntype Props = {\n  photoURL: string,\n  signOut: () => void \n}\n\nexport default function Header({ \n  photoURL,\n  signOut\n}: Props) {\n  return (\n    <nav {...css({\n      position: 'fixed',\n      top: '0',\n      width: '100%',\n      height: '3.5rem',\n      zIndex: '99',\n      backgroundColor: '#6cb16a',\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      color: '#fff'\n    })}>\n      <img \n        src={photoURL}\n        alt=\"avatar\"\n        {...css({\n          width: '2rem',\n          position: 'relative',\n          left: '0.5rem',\n          borderRadius: '100%',\n          border: '0.1rem solid #fff',\n          boxShadow: '0 0.3rem 1rem #00541e'\n        })}\n      />\n      <span {...css({ fontWeight: '500' })}>\n        Sponsibly\n      </span>\n      <div\n        onClick={signOut}\n        {...css({\n          position: 'relative',\n          right: '0.5rem',\n          color: '#fff'\n        })}\n      >\n        <ExitIcon color=\"#fff\" />\n      </div>\n    </nav>\n  )\n}\n","// @flow\nimport * as React from 'react'\nimport { css } from 'glamor'\nimport { NavLink } from 'react-router-dom'\n\ntype Props = {\n  children?: React.Node,\n  Icon: any,\n  label: string,\n  path: string\n}\n\nexport default function FooterItem({ \n  children,\n  Icon,\n  label,\n  path\n}: Props) {\n  const matchesLogging = (match, location) => {\n    const isEditRoute = location.pathname.split('/')[1] === label.toLowerCase()\n    return match || isEditRoute\n  }\n\n  return (\n    <NavLink\n      to={path}\n      isActive={matchesLogging}\n      replace\n      activeClassName=\"navlink-active\"\n      {...css({\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '0.7rem',\n        color: '#9e9e9e',\n        cursor: 'pointer',\n        '&.navlink-active': {\n          color: '#6cb16a',\n          '& svg': { fill: '#6cb16a !important'}\n        }\n      })}\n    >\n      <Icon />\n      <span>{label}</span>\n    </NavLink>\n  )\n}\n","// @flow\nimport React from 'react'\nimport { css } from 'glamor'\nimport DashboardIcon from 'material-ui/svg-icons/action/dashboard'\nimport AssignmentIcon from 'material-ui/svg-icons/action/assignment'\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { ROUTES } from '../constants'\nimport FooterItem from './FooterItem'\n\nexport default function Footer() {\n  return (\n    <footer {...css({\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      alignItems: 'center',\n      position: 'fixed',\n      bottom: '0',\n      width: '100%',\n      height: '3.5rem',\n      borderTop: '1px solid #eaeaea'\n    })}>\n      <FooterItem\n        path={ROUTES.dashboard}\n        Icon={DashboardIcon}\n        label=\"Dashboard\"\n      />\n      <FooterItem \n        path={ROUTES.logging.list}\n        Icon={AssignmentIcon}\n        label=\"Logging\"\n      />\n      <FooterItem \n        path={ROUTES.recipes.list}\n        Icon={SettingsIcon}\n        label=\"Settings\"\n      />\n    </footer>\n  )\n}\n","// @flow\n// @Expected-Error useState and useEffect haven't been typed yet\nimport React, { useState, useEffect, lazy, Suspense } from 'react'\nimport { css } from 'glamor'\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route\n} from 'react-router-dom'\n\nimport { ROUTES } from './constants'\nimport { Log } from './types'\nimport DataStore from './DataStore'\nimport LoadingSpinner from './components/LoadingSpinner'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n// import {\n//   LoginRoute, RecipesRoute, LoggingEditRoute, DashboardRoute\n// } from './routes'\nconst LoginRoute = lazy(() => import('./routes/LoginRoute'))\nconst SettingsRoute = lazy(() => import('./routes/SettingsRoute'))\nconst LoggingEditRoute = lazy(() => import('./routes/LoggingEditRoute'))\nconst DashboardRoute = lazy(() => import('./routes/DashboardRoute'))\n\n// import LoggingList from './components/LoggingList'\nconst LoggingList = lazy(() => import('./components/LoggingList'))\n\ntype Logs = Array<Log> | null\n\nconst dataStore = new DataStore();\n\nexport default function App() {\n  const [logs, setLogs] = useState(null)\n  const [authStatus, setAuthStatus] = useState(null)\n\n  useEffect(() => {\n    dataStore.checkAuth().then((dataStore) => {\n      dataStore.loggingStore.registerObserver((logs: Array<Log>) =>\n        setLogs({ logs })\n      );\n      setAuthStatus(true)\n    }).catch((e) => {\n      setAuthStatus(false)\n    })\n    // pass an empty array here as a second parameter\n    // to indicate that this effect should be run only once\n    // which is simiiar to componentDidMount\n  }, [dataStore])\n\n  const _signOut = (): void => {\n    dataStore.signOut().then(() => {\n      setAuthStatus(false)\n    })\n  }\n\n  if (authStatus === null) {\n    return <LoadingSpinner />\n  } else if (authStatus === false) {\n    return <LoginRoute login={dataStore.login} />\n  }\n\n  return (\n    <Router>\n      <div>\n        <Header {...dataStore.user} signOut={_signOut} />\n        <Suspense fallback={<LoadingSpinner />}>\n          <div {...css({\n            position: 'fixed',\n            bottom: '3.5rem',\n            top: '3.5rem',\n            width: '100%',\n            overflow: 'scroll'\n          })}>\n            <Route\n              exact\n              path={'/'}\n              render={() => {\n                // default go to logging list\n                return <Redirect to={ROUTES.logging.list} />\n              }}\n            />\n            {/* dashboard */}\n            <Route \n              path={ROUTES.dashboard} \n              exact\n              render={() => {\n                return <DashboardRoute />\n              }}\n            />\n            {/* logging */}\n            <Route \n              path={ROUTES.logging.new} \n              exact\n              render={({ history }) => {\n                return (\n                  <LoggingEditRoute\n                    history={history}\n                    saveFn={dataStore.loggingStore.saveRecord}\n                  />\n                )\n              }}\n            />\n            <Route\n              path={ROUTES.logging.list}\n              exact\n              render={() => {\n                return <LoggingList logs={logs ? logs.logs : null} deleteFn={dataStore.loggingStore.deleteRecord} />\n              }}\n            />\n            <Route\n              path={ROUTES.logging.edit}\n              exact\n              render={({ history, match }) => {\n                return  <LoggingEditRoute\n                          history={history}\n                          saveFn={dataStore.loggingStore.saveRecord}\n                          deleteFn={dataStore.loggingStore.deleteRecord}\n                          getRecord={dataStore.loggingStore.getRecord}\n                          id={match.params.id}\n                        />\n              }}\n            />\n            {/* recipes */}\n            <Route\n              exact\n              path={ROUTES.recipes.list}\n              render={() => {\n                return <SettingsRoute />\n              }}\n            />\n          </div>\n        </Suspense>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n\n    window.addEventListener('fetch', () => {})\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n\nimport './theme'\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Suspense fallback={null}>\n    <MuiThemeProvider>\n      <App />\n    </MuiThemeProvider>\n  </Suspense>\n, document.getElementById('root'));\n\nregisterServiceWorker();\n","// @flow\nimport React from 'react'\nimport { css } from 'glamor'\nimport CircularProgress from 'material-ui/CircularProgress'\n\nexport default function LoadingSpinner({small = false}) {\n  return (\n    <div {...css({\n      position: 'fixed',\n      left: '50%', top: '45%',\n      transform: 'translate(-50%, -50%)',\n      zIndex: 999\n    })}>\n      <CircularProgress\n        size={small ? 35 : 60}\n        thickness={small ? 5 : 7}\n        color=\"#9ccc65\" \n      />\n    </div>\n  )\n}\n","import { emojify } from 'react-emoji'\n\nfunction addLeadingZero(num) {\n  return parseInt(num, 10) > 10 ? num : `0${num}`\n}\n\nexport function dateToStr(date) {\n  // Date => '2018-01-24'\n  const year = date.getFullYear()\n  const month = addLeadingZero(date.getMonth() + 1)\n  const day = addLeadingZero(date.getDate())\n  return `${year}-${month}-${day}`\n}\n\nexport function strToDate(str) {\n  // '2018-01-24' => Date\n  const splittedDate = str.split('-')\n  return new Date(splittedDate[0], splittedDate[1] - 1, splittedDate[2])\n}\n\nexport function timeToStr(date) {\n  // Date => '15:33'\n  const hours = addLeadingZero(date.getHours())\n  const minutes = addLeadingZero(date.getMinutes())\n  return `${hours}:${minutes}`\n}\n\nexport function strToTime(str) {\n  if (!str) return\n  const date = new Date()\n  date.setHours(str.split(':')[0])\n  date.setMinutes(str.split(':')[1])\n  return date\n}\n\nexport function getExactTimeStamp(log) {\n  return new Date(`${log.date}T${log.time}`).getTime()\n}\n\nexport function getTimePeriodEmoji(time) {\n  const hours = time.split(':')[0]\n  if (hours < 10) return emojify(':bread:')\n  if (hours < 15) return emojify(':bento:')\n  return emojify(':sushi:')\n}\n\nexport function getRatingEmoji(rating) {\n  if (rating === 'good')  return emojify(':smile:')\n  if (rating === 'fair')  return emojify(':simple_smile:')\n  return emojify(':worried:')\n}\n\nexport function transfromDateString(date) {\n  const splittedDate = date.split('-')\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  return`${months[splittedDate[1] - 1]}. ${splittedDate[2]}`\n}\n"],"sourceRoot":""}